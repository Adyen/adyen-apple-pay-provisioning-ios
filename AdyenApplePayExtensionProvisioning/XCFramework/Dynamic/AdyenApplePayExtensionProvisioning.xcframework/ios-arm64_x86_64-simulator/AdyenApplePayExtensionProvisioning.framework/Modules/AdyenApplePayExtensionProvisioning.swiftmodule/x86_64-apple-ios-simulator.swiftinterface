// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1 effective-5.10 (swiftlang-6.1.0.110.21 clang-1700.0.13.3)
// swift-module-flags: -target x86_64-apple-ios13.4-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -module-name AdyenApplePayExtensionProvisioning
// swift-module-flags-ignorable: -no-verify-emitted-module-interface -interface-compiler-version 6.1
@_exported import AdyenApplePayExtensionProvisioning
import Foundation
import PassKit
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public protocol ExtensionProvisioningServiceDelegate : AnyObject {
  func cardArt(paymentInstrumentId: Swift.String) -> CoreGraphics.CGImage
  func provision(paymentInstrumentId: Swift.String, sdkOutput: Foundation.Data) async -> Foundation.Data?
}
public enum ExtensionProvisioningServiceError : Foundation.LocalizedError {
  case invalidSDKInput
  case emptySDKInputs
  case unableToConstructSDKOutput
  case applePayNotSupported
  public var errorDescription: Swift.String? {
    get
  }
  public static func == (a: AdyenApplePayExtensionProvisioning.ExtensionProvisioningServiceError, b: AdyenApplePayExtensionProvisioning.ExtensionProvisioningServiceError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@_hasMissingDesignatedInitializers public class ExtensionProvisioningService {
  convenience public init(sdkInput: Foundation.Data) throws
  convenience public init(sdkInputs: [Foundation.Data]) throws
  @available(iOS 14, *)
  public func extensionStatus(requiresAuthentication: Swift.Bool) -> PassKit.PKIssuerProvisioningExtensionStatus
  @available(iOS 14, *)
  public static var entriesUnavailableExtensionStatus: PassKit.PKIssuerProvisioningExtensionStatus {
    get
  }
  @available(iOS 14, *)
  public func passEntries(withDelegate delegate: any AdyenApplePayExtensionProvisioning.ExtensionProvisioningServiceDelegate) -> [PassKit.PKIssuerProvisioningExtensionPassEntry]
  @available(iOS 14, *)
  public func remotePassEntries(withDelegate delegate: any AdyenApplePayExtensionProvisioning.ExtensionProvisioningServiceDelegate) -> [PassKit.PKIssuerProvisioningExtensionPassEntry]
  public func generateAddPaymentPassRequestForPassEntryWithIdentifier(_ identifier: Swift.String, configuration: PassKit.PKAddPaymentPassRequestConfiguration, certificateChain certificates: [Foundation.Data], nonce: Foundation.Data, nonceSignature: Foundation.Data, delegate: any AdyenApplePayExtensionProvisioning.ExtensionProvisioningServiceDelegate) async throws -> PassKit.PKAddPaymentPassRequest
  @objc deinit
}
extension AdyenApplePayExtensionProvisioning.ExtensionProvisioningServiceError : Swift.Equatable {}
extension AdyenApplePayExtensionProvisioning.ExtensionProvisioningServiceError : Swift.Hashable {}
